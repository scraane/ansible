- name: docker | install aptitude using apt
  apt:
    name: aptitude
    state: latest
    update_cache: yes
    force_apt_get: yes

- name: docker | install required system packages
  apt:
    name: "{{ item }}"
    state: latest
    update_cache: yes
    default_release: buster-backports
  loop: [ 'apt-transport-https', 'ca-certificates', 'curl', 'software-properties-common', 'python3-pip', 'virtualenv', 'python3-setuptools','python3-docker','python-pip','python-setuptools','python-docker']

- name: docker | add Docker GPG apt Key
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present

- name: docker | add Docker Repository
  apt_repository:
    repo: deb https://download.docker.com/linux/ubuntu bionic stable
    state: present

- name: docker | update apt and install docker-ce
  apt:
    update_cache: yes
    name: containerd.io
    state: latest
    default_release: buster-backports

- name: docker | update apt and install docker-ce
  apt:    
    update_cache: yes
    name: docker-ce
    state: latest
    default_release: buster-backports

- name: Add remote "scraane" user to "docker" group
  remote_user: scraane
  user:
    name: "scraane"
    group: "docker"
    append: yes

- name: Install docker-compose
  remote_user: scraane
  get_url: 
    url : https://github.com/docker/compose/releases/download/1.25.1-rc1/docker-compose-Linux-x86_64
    dest: /usr/local/bin/docker-compose
    mode: 'u+x,g+x'

#- name: Pull default Docker image
#  docker_image:
#    name: "portainer/portainer-ce"
#    source: pull

# Creates the number of containers defined by the variable create_containers, using values from vars file
- name: Create default containers
  docker_container:
    name: "portainer-agent"
    image: "portainer/portainer-ce"
    state: started