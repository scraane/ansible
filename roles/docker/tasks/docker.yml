- name: docker | install dependencies
  apt:
    name: 
        - apt-transport-https
        - ca-certificates
        - curl
        - gnupg2
        - software-properties-common
    state: present
    update_cache: no

- name: docker | Add Docker GPG apt Key
  apt_key:
    url: "{{ docker_apt_gpg_key }}"
    state: present

- name: docker | Add Docker Repository
  apt_repository:
    repo: "{{ docker_apt_repository }}"
    state: present
    update_cache: true
    
- name: docker | Update apt and install docker-ce
  apt:
    name: docker-ce
    state: present
    update_cache: false

- name: docker | Run and enable docker
  service:
    name: docker
    state: started
    enabled: true

- name: docker | add remote "scraane" user to "docker" group
  remote_user: scraane
  user:
    name: "scraane"
    group: "docker"
    append: yes

- name: docker | create docker-data directory if it does not exist
  file:
    path: /docker_data
    state: directory
    mode: '0755'
    owner: root
    group: docker

- name: docker | docker-compose | Check current docker-compose version
  command: docker-compose --version
  register: docker_compose_vsn
  changed_when: false
  failed_when: false
  check_mode: no

- set_fact:
    docker_compose_current_version: "{{ docker_compose_vsn.stdout | regex_search('(\\d+(\\.\\d+)+)') }}"
  when:
    - docker_compose_vsn.stdout is defined
- name: docker | docker-compose | Install or upgrade docker-compose
  get_url: 
    url : "https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-Linux-x86_64"
    dest: /usr/local/bin/docker-compose
    mode: 'a+x'
    force: yes
  when: >
    docker_compose_current_version is not defined
    or docker_compose_current_version is version(docker_compose_version, '<')
    
    
#- name: docker | add portainer agent
#  docker_container:
#    name: "portainer-agent"
#   image: "portainer/agent"
#    ports: "9001:9001"
#    volumes:
#      - "/var/run/docker.sock:/var/run/docker.sock"
#      - "/var/lib/docker/volumes:/var/lib/docker/volumes"
#    state: started
#    container_default_behavior: no_defaults

- name: docker | copy update.sh script
  copy:
    src: files/update.sh
    dest: /docker-data/update.sh
    mode: a+x
    owner: root
    group: docker
    mode: 0755

- name: docker | create portainer-agent directory if it does not exist
  file:
    path: /docker-data/portainer-agent
    state: directory
    mode: '0755'
    owner: root
    group: docker

- name: docker | copy portainer-agent compose script
  copy:
    src: files/portaineragent.yml
    dest: /docker-data/portainer-agent/docker-compose.yml
    mode: a+x
    owner: root
    group: docker
    mode: 0755
    
- name: docker | deploy portainer-agent
  docker_compose:
    project_src: /docker-data/portainer-agent/
    files: /docker-data/portainer-agent/docker-compose.yml
 
