- name: docker | repo and docker | debian
  block:
    - name: docker | install aptitude using apt
      apt:
        name: aptitude
        state: latest
        update_cache: yes
        force_apt_get: yes

    - name: docker | install required system packages
      apt:
        name: "{{ item }}"
        state: latest
        update_cache: yes
        default_release: buster-backports
      loop: [ 'apt-transport-https', 'ca-certificates', 'curl', 'software-properties-common','virtualenv','python3-pip','python3-setuptools','python3-docker']

    - name: docker | add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: docker | add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu bionic stable
        state: present

    - name: docker | update apt and install docker-ce
      apt:
        update_cache: yes
        name: containerd.io
        state: latest
        default_release: buster-backports

    - name: docker | update apt and install docker-ce
      apt:    
        update_cache: yes
        name: docker-ce
        state: latest
        default_release: buster-backports

  when: ansible_distribution in ["Debian", "Ubuntu"]

- name: docker | install repo and docker | centos
  block:
    - name: docker | remove docker if installed from CentOS repo
      yum:
        name: "{{ item }}"
        state: removed
      loop: [ 'docker', 'docker-client', 'docker-client-latest', 'docker-common','docker-latest','docker-latest-logrotate','docker-logrotate','docker-engine']

    - name: docker | add Docker Repository
      get_url:
        url: https://download.docker.com/linux/centos/docker-ce.repo
        dest: /etc/yum.repos.d/docer-ce.repo
      become: yes

    - name: docker | enable docker repo
      ini_file:
        dest: /etc/yum.repos.d/docer-ce.repo
        section: 'docker-ce-edge'
        option: enabled
        value: 0
      become: yes

    - name: docker | install docker-ce
      package:
        name: docker-ce
        state: latest
      become: yes

    - name: Start Docker service
      service:
        name: docker
        state: started
        enabled: yes
      become: yes

  when: ansible_distribution in ["Centos", "Ubuntu"]

    

- name: docker | add remote "scraane" user to "docker" group
  remote_user: scraane
  user:
    name: "scraane"
    group: "docker"
    append: yes

- name: docker | create docker-data directory if it does not exist
  file:
    path: /docker-data
    state: directory
    mode: '0755'
    owner: root
    group: docker

- name: docker | install docker-compose
  remote_user: scraane
  get_url: 
    url : https://github.com/docker/compose/releases/download/1.25.1-rc1/docker-compose-Linux-x86_64
    dest: /usr/local/bin/docker-compose
    mode: 'u+x,g+x'

- name: docker | add portainer agent
  docker_container:
    name: "portainer-agent"
    image: "portainer/agent"
    ports: "9001:9001"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "/var/lib/docker/volumes:/var/lib/docker/volumes"
    state: started
    container_default_behavior: no_defaults

- name: docker | copy update.sh script
  copy:
    src: files/update.sh
    dest: /docker-data/update.sh
    mode: a+x
    owner: root
    group: docker
    mode: 0755

- name: docker | create portainer-agent directory if it does not exist
  file:
    path: /docker-data/portainer-agent
    state: directory
    mode: '0755'
    owner: root
    group: docker

- name: docker | copy portainer-agent compose script
  copy:
    src: files/portaineragent.yml
    dest: /docker-data/portainer-agent/docker-compose.yml
    mode: a+x
    owner: root
    group: docker
    mode: 0755
