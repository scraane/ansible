---
- hosts: all

  become: yes
  tasks:
    - name: update apt packages
      apt:
        upgrade: yes
        update_cache: yes
        autoclean: yes
        autoremove: yes
        
    - name: Check/Install default packages
      apt:
        name: 
          - htop
          - wget
          - curl
          - sudo
          - neofetch
          - git
          - python-is-python3
        state: present
        update_cache: true
      become: true
      
    - name: Install Apache, PHP, MariaDB, imagemagick and php-imagick
      apt:
        name: 
          - php-common
          - php-cli
          - php-curl
          - libapache2-mod-php
          - mariadb-server
          - mariadb-client
          - python3-mysqldb
          - imagemagick
          - php-imagick
        state: present
        update_cache: true
      become: true
      
    - name: Add user scraane to www-data group
      user: name=scraane
            groups=www-data
            append=yes

    - name: Make changes to apache available sites file 000-default.conf
      lineinfile: 
        path: /etc/apache2/sites-available/000-default.conf
        backup: yes
        regexp: '^DocumentRoot'
        line: 'DocumentRoot /var/www/snipe-it'
        state: present  

    - name: Make changes to apache available sites file default-ssl.conf
      lineinfile: 
        path: /etc/apache2/sites-available/default-ssl.conf
        backup: yes
        regexp: '^DocumentRoot'
        line: 'DocumentRoot /var/www/snipe-it'
        state: present  

    - name: Remove anonymous access to mysql
      community.mysql.mysql_user:
        name: ''
        host_all: true
        state: absent
        
    - name: "Create new databases with {{ snipeit_install_dbname }}"
      community.mysql.mysql_db:
        name: "{{ snipeit_install_dbname }}"
        state: present
    
    - name: "Create database user with name {{ snipeit_install_dbusername }} with all database privileges"
      community.mysql.mysql_user:
        name: "{{ snipeit_install_dbusername }}"
        password: "{{ snipeit_install_dbpassword }}"
        priv: '{{ snipeit_install_dbname }}.*:ALL'
        state: present
  
    - name: Clone Snipe-IT Git repo
      git:
        repo: https://github.com/snipe/snipe-it
        dest: /var/www/snipe-it
        single_branch: yes    
        version: master

    - name: Copy example .env file to .env
      shell: "cp /var/www/snipe-it/.env.example /var/www/snipe-it/.env"
        
    - name: Make changes to .env file
      lineinfile:
        path: /var/www/snipe-it/.env
        backup: no
        regexp: '{{item.From}}'
        line: '{{item.To}}'
        state: present  
      with_items:
       - { From: '^APP_ENV=', To: 'APP_ENV=production'}
       - { From: '^APP_URL=', To: 'APP_URL={{ snipeit_install_appurl }}'}
       - { From: '^APP_TIMEZONE=', To: 'APP_TIMEZONE={{ snipeit_install_timezone }}'}
       - { From: '^DB_CONNECTION=', To: 'DB_CONNECTION=mysql'}
       - { From: '^DB_HOST=', To: 'DB_HOST={{ snipeit_install_dbhost }}'}
       - { From: '^DB_DATABASE=', To: 'DB_DATABASE={{ snipeit_install_dbname }}'}
       - { From: '^DB_USERNAME=', To: 'DB_USERNAME={{ snipeit_install_dbusername }}'}
       - { From: '^DB_PASSWORD=', To: 'DB_PASSWORD={{ snipeit_install_dbpassword }}'}
       - { From: '^DB_PREFIX=', To: 'DB_PREFIX={{ snipeit_install_dbprefix }}'}
       - { From: '^MAIL_DRIVER=', To: 'MAIL_DRIVER={{ snipeit_install_maildriver }}'}
       - { From: '^MAIL_HOST=', To: 'MAIL_HOST={{ snipeit_install_mailhost }}'}
       - { From: '^MAIL_USERNAME=', To: 'MAIL_USERNAME={{ snipeit_install_mailusername }}'}
       - { From: '^MAIL_PASSWORD=', To: 'MAIL_PASSWORD={{ snipeit_install_mailpassword }}'}
       - { From: '^MAIL_ENCRYPTION=', To: 'MAIL_ENCRYPTION={{ snipeit_install_mailencryption }}'}
       - { From: '^MAIL_FROM_ADDR=', To: 'MAIL_FROM_ADDR={{ snipeit_install_mailfromaddr }}'}
       - { From: '^MAIL_FROM_NAME=', To: 'MAIL_FROM_NAME={{ snipeit_install_mailfromname }}'}
       - { From: '^MAIL_REPLYTO_ADDR=', To: 'MAIL_REPLYTO_ADDR={{ snipeit_install_mailreplytoaddr }}'}
       - { From: '^MAIL_REPLYTO_NAME=', To: 'MAIL_REPLYTO_NAME={{ snipeit_install_mailreplytoname }}'}
       - { From: '^MAIL_AUTO_EMBED=', To: 'MAIL_AUTO_EMBED={{ snipeit_install_mailautoembed }}'}
       - { From: '^MAIL_AUTO_EMBED_METHOD=', To: 'MAIL_AUTO_EMBED_METHOD={{ snipeit_install_mailautoembedmethof }}'}
       - { From: '^IMAGE_LIB=', To: 'IMAGE_LIB={{ snipeit_install_imagelib }}'}
       
    - name: Add snipeit user with no login and home
      user:
        name: "snipeit"
        group: "www-data"
        shell: /sbin/nologin
        create_home: no
      
    - name: Change file ownership, group and permissions
      file:
        path: "{{item.Location}}"
        owner: "snipeit"
        group: "www-data"
        mode: '0755'
      with_items:
        - { Location: '/var/www/snipe-it/' }
        - { Location: '/var/www/snipe-it/public/uploads' }
        - { Location: '/var/www/snipe-it/bootstrap/cache' }
        
    - name: Install composer
      register: ps
      shell: "cd /var/www/snipe-it && curl -sS https://getcomposer.org/installer | php"

    - debug: var=ps.stdout_lines
      
    - name: Install dependecies with composer
      remote_user: scraane
      community.general.composer:
        command: install
        working_dir: /var/www/snipe-it

    - name: Generate APP_KEY
      register: ps
      shell: "cd /var/www/snipe-it && php artisan key:generate"
      
    - debug: var=ps.stdout_lines
