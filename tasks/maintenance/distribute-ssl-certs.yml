---
- hosts: source

  become: yes
  tasks:

    - name: "Comparing {{ ssl_cert_current_location }}/cert.pem with {{ ssl_cert_archive_location }}/cert.pem"
      shell: diff {{ ssl_cert_current_location }}/cert.pem {{ ssl_cert_archive_location }}/cert.pem
      register: diff
      failed_when: diff.rc not in [ 0, 1 ]

    - name: The file has not changed. Ending 1st part of playbook
      meta: end_play
      when: diff.rc == 0

    - name: Copy cert to compare location for next time
      shell: cp {{ ssl_cert_current_location }}/cert.pem /root/ssl_archive/
      register: cp
      failed_when: cp.rc not in [ 0, 1 ]
      when: diff.rc == 1
    
    - name: Copy content of {{ ssl_cert_current_location }}/cert.pem to variable
      slurp:
         src: '{{ ssl_cert_current_location }}/cert.pem'
      register: cert_pem
      when: diff.rc == 1

    - name: Copy content of {{ ssl_cert_current_location }}/privkey.pem to variable
      slurp:
         src: '{{ ssl_cert_current_location }}/privkey.pem'
      register: privkey_pem
      when: diff.rc == 1
      
    - name: Copy content of {{ ssl_cert_current_location }}/chain.pem to variable
      slurp:
         src: '{{ ssl_cert_current_location }}/chain.pem'
      register: chain_pem
      when: diff.rc == 1
      
    - name: Copy content of {{ ssl_cert_current_location }}/fullchain.pem to variable
      slurp:
         src: '{{ ssl_cert_current_location }}/fullchain.pem'
      register: fullchain_pem
      when: diff.rc == 1

    - name: Setting variable to dummy host for further processing
      add_host:
        name: "variable_holder"
        file_changed:  "{{ diff.rc }}"
        cert_pem:  "{{ cert_pem.content | b64decode }}"
        privkey_pem: "{{ privkey_pem.content | b64decode }}"
        chain_pem: "{{ chain_pem.content | b64decode }}"
        fullchain_pem: "{{ fullchain_pem.content | b64decode }}"
      no_log: true
      when: diff.rc == 1

  
- hosts: target

  become: yes

  vars:
    file_changed: "{{ hostvars['variable_holder']['file_changed'] }}"
    cert_pem: "{{ hostvars['variable_holder']['cert_pem'] }}"
    privkey_pem: "{{ hostvars['variable_holder']['privkey_pem'] }}"
    chain_pem: "{{ hostvars['variable_holder']['chin_pem'] }}"
    fullchain_pem: "{{ hostvars['variable_holder']['fullchain_pem'] }}"
    
  tasks:
    - debug:
        msg: "{{ cert_pem }}"
        
    - name: If the file has changed we will end the playbook
      meta: end_play
      when: file_changed == "0"
    
    - name: Saving PVE private key
      copy:
        content: "{{ privkey_pem }}"
        dest: "{{ ssl_cert_pve_location }}/pveproxy-ssl.key"
      when: file_changed == "1"

    - name: Saving PVE fullchain cert
      copy:
        content: "{{ fullchain_pem }}"
        dest: "{{ ssl_cert_pve_location }}/pveproxy-ssl.pem"
      when: file_changed == "1"

    - name: Restarting pve proxy
      shell: pveproxy restart
      when: file_changed == "1"
    
    - name: Get PVE Proxy status
      ansible.builtin.systemd:
        name: "pveproxy"
      register: pveproxy_status
    
    - debug:
        var: pveproxy_status.status.ActiveState
    
